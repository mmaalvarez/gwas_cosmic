nextflow.enable.dsl=2

includeConfig 'params.config'

process {

	// common across processes

    executor = "${System.env.executor}"

    queueSize = 500

    submitRateLimit = '1sec'

	clusterOptions = "${System.env.project_group}"

	container = "${System.env.work_dir}/containers/gwas_cosmic_latest.sif"

	// processes get different resources depending on how computationally demanding they are

    withLabel: short_low {
        time = { "${params.time_4h} h" }
        memory = { "${params.memory_700M + 2*(task.attempt-1)} GB" }
		queue = { "${params.partition_fast_short}" }
		errorStrategy = 'retry'
		maxRetries = 3
    }

    withLabel: medium_low {
        time = { "${params.time_10h} h" }
        memory = { "${params.memory_700M + 2*(task.attempt-1)} GB" }
		queue = { "${params.partition_slow_long}" }
        cpus = 1
		errorStrategy = 'retry'
		maxRetries = 2
    }

    withLabel: short_medium {
        time = { "${params.time_4h} h" }
        memory = { "${params.memory_4G + 4*(task.attempt-1)} GB" }
		queue = { "${params.partition_fast_short}" }
        cpus = 1
		errorStrategy = 'retry'
		maxRetries = 2
    }
    
    withLabel: short_medium_ignoreError {
        time = { "${params.time_4h} h" }
        memory = { "${params.memory_4G} GB" }
                queue = { "${params.partition_fast_short}" }
        cpus = 1
		errorStrategy = 'ignore'
    }
    
    withLabel: medium_medium {
        time = { "${params.time_10h} h" }
        memory = { "${params.memory_4G + 1*(task.attempt-1)} GB" }
		queue = { "${params.partition_slow_long}" }
        cpus = 1
		errorStrategy = 'retry'
		maxRetries = 2
    }

    withLabel: short_high {
        time = { "${params.time_4h} h" }
        memory = { "${params.memory_10G + 1*(task.attempt-1)} GB" }
                queue = { "${params.partition_fast_short}" }
        cpus = 1
		errorStrategy = 'retry'
		maxRetries = 2
    }
}

singularity {
    enabled = true
    autoMounts = true
    runOptions = '-B "$root_dir"'
}

trace {
    enabled = true
    overwrite = true
    file = "trace"
}

dag {
    enabled = true
    overwrite = true
    file = "dag_flowchart.svg"
}
